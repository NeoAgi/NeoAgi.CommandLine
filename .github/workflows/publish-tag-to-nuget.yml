# This is a basic workflow to help you get started with Actions

name: Build and Publish Package

# Controls when the workflow will run
on:
  # Triggers the workflow on push of a new tag
  push:
    tags: '*'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
          DOTNET_NOLOGO: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1'
          include-prerelease: true
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.100-preview.4.21255.9'
          include-prerelease: true
      
      - name: Print Versions that we'll be using
        run: dotnet --version
          
      - name: Build our code
        run: | 
            dotnet build -c Release NeoAgi.CommandLine/NeoAgi.CommandLine.csproj
            dotnet build -c Release NeoAgi.CommandLine.Extensions.Configuration/NeoAgi.CommandLine.Extensions.Configuration.csproj

      - name: Run Tests
        run: dotnet test 

      - name: Pack our projects
        run: | 
            dotnet pack -c Release --include-source --include-symbols NeoAgi.CommandLine/NeoAgi.CommandLine.csproj
            dotnet pack -c Release --include-source --include-symbols NeoAgi.CommandLine.Extensions.Configuration/NeoAgi.CommandLine.Extensions.Configuration.csproj
      
      - name: Push NeoAgi.CommandLine
        if: always() 
        run: dotnet nuget push NeoAgi.CommandLine/bin/Release/NeoAgi.CommandLine.*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NEOAGI_NUGET_API_KEY }}

      - name: Push NeoAgi.CommandLine.Extensions.Configuration
        if: always() 
        run: dotnet nuget push CommandLine.Extensions.Configuration/bin/Release/NeoAgi.CommandLine.Extensions.Configuration.*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key  ${{ secrets.NEOAGI_NUGET_API_KEY }}